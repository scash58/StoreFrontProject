@* Shopping Cart Step 5
    We commented out the below because the datatype we will send to this view is a Dictionary
    @model IEnumerable<MVC3.UI.MVC.Models.CartItemViewModel>
*@
@model Dictionary<int, StoreFrontProject.UI.MVC.Models.CartItemViewModel>

@{
    ViewBag.Title = "Shopping Cart";

    //Add some local variables for calculation on this page (i.e. total cost, total # of items)
    decimal? cartTotal = 0;
    int totalCountOfItems = 0;
}

<div class="main-banner" id="top">

    <div class="indexWrapper">
        <div class="col-md-12">
            <div id="mainContent">
                <div class="formContainer col-md-12">
                    <p class="text-right">
                        @Html.ActionLink("Back to Shopping", "Products", "Home", null, new { @class = "btn btn-info" })
                    </p>

                    <h2 class="text-center">@ViewBag.Title</h2>

                    @if (Model.Count == 0)
                    {
                        <p class="alert alert-warning">
                            @ViewBag.Message
                        </p>
                    }
                    else
                    {
                        <table class="table">
                            <tr>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Name</th>
                                <th>Price</th>
                                <th>Total</th>
                                <th></th>
                            </tr>

                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <img src="~/Content/assets/images/products/t_@item.Value.Product.ProductImage" alt="Product" title="@item.Value.Product.ProductName" />
                                    </td>
                                    <td>
                                        @using (Html.BeginForm("UpdateCart", "ShoppingCart", FormMethod.Post))
                                        {
                                            @Html.Hidden("productID", item.Key)
                                            @Html.TextBox("qty", item.Value.Qty, new { @class = "form-control", style = "max-width: 50px;display: inline;" })
                                            <input type="submit" value="Update Quantity" class="btn btn-info" />
                                        }

                                        @{
                                            //calculate the running total for the items in the cart
                                            totalCountOfItems += item.Value.Qty;
                                        }
                                    </td>
                                    <td>@item.Value.Product.ProductName</td>
                                    <td>@string.Format($"{item.Value.Product.UnitPrice:c}")</td>
                                    <td>
                                        @* Calculate the line total & update running total variable (cartTotal) that keeps track of the cost of all
                                            items in the cart.*@
                                        @{
                                            decimal? lineTotal = item.Value.Product.UnitPrice * item.Value.Qty;
                                            cartTotal += lineTotal;
                                        }

                                        @string.Format($"{lineTotal:c}")
                                    </td>
                                    <td>
                                        @Html.ActionLink("Remove from Cart", "RemoveFromCart", new { id = item.Key })
                                    </td>
                                </tr>
                            }

                        </table>

                        <p class="alert alert-success text-center" style="font-size: 1.25em;">
                            You have @totalCountOfItems item@(totalCountOfItems == 1 ? "" : "s") in your cart.
                            Your total before taxes and shipping is @string.Format($"{cartTotal:c}").
                        </p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

